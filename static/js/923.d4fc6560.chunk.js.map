{"version":3,"file":"static/js/923.d4fc6560.chunk.js","mappings":"wOAEaA,EAAcC,EAAAA,GAAAA,IAAH,oMAeXC,EAAUD,EAAAA,GAAAA,IAAH,8D,2BCsBpB,EAjCa,WACX,OAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAMR,OAJAE,EAAAA,EAAAA,YAAU,WACS,KAAbF,IAAiBG,EAAAA,EAAAA,IAAkBH,GAAUI,KAAKL,EACvD,GAAE,CAACC,KAGF,SAACJ,EAAD,UACwB,IAArBE,EAAUO,QACT,uEAEAP,EAAUQ,KACR,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,cAAP,IAAsBC,aAAAA,OAAtB,MAAqC,WAArC,EAAiDC,EAAjD,EAAiDA,UAAjD,OACE,UAAChB,EAAD,YACE,gBACEiB,IACEF,EAAY,0CAC2BA,GACnCG,EAENC,IAAKL,KAEP,wBAAKA,KACL,0CAAkBE,OAVFH,EADpB,KAkBT,C,+LCpCKO,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,oBAAqB,CAChDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAqCf,GAArC,wFACkBS,EAAAA,EAAAA,GAAM,UAAD,OAAWT,GAAM,CAC3CU,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,wFACkBR,EAAAA,EAAAA,GAAM,gBAAiB,CAC5CC,OAAQ,CACNC,QAASJ,EACTW,KAAM,EACNC,MAAOF,KALN,cACCL,EADD,yBASEA,EAASC,KAAKC,SAThB,kEAYA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCI,GAAjC,wFACkBS,EAAAA,EAAAA,GAAM,UAAD,OAAWT,EAAX,YAAyB,CACnDU,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASC,KAAKO,MAPhB,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCrB,GAAjC,wFACkBS,EAAAA,EAAAA,GAAM,UAAD,OAAWT,EAAX,YAAyB,CACnDU,OAAQ,CACNC,QAASJ,EACTW,KAAM,KAJL,cACCN,EADD,yBAQEA,EAASC,KAAKC,SARhB,kEA5CPL,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/Cast/Cast.styleds.js","components/Cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastStyleds = styled.div`\n  margin-left: 20px;\n\n  img {\n    margin-bottom: 10px;\n    width: 200px;\n  }\n\n  span {\n    width: 100%;\n    margin-bottom: 30px;\n    display: inline-block;\n  }\n`;\n\nexport const CastDiv = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastStyleds, CastDiv } from './Cast.styleds';\nimport { fetchMovieCredits } from 'services/moviesApi';\nimport photo from '../../photo/broken_img.png';\n\nconst Cast = () => {\n  const [creditsId, setCreditsId] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    if (moviesId !== '') fetchMovieCredits(moviesId).then(setCreditsId);\n  }, [moviesId]);\n\n  return (\n    <CastDiv>\n      {creditsId.length === 0 ? (\n        <p> We don't have reviews for actors' photos. </p>\n      ) : (\n        creditsId.map(\n          ({ id, original_name, profile_path = 'No photo', character }) => (\n            <CastStyleds key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                    : photo\n                }\n                alt={original_name}\n              />\n              <h3>{original_name}</h3>\n              <span>character: {character}</span>\n            </CastStyleds>\n          )\n        )\n      )}\n    </CastDiv>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = '2fdffbc73ca59cbf450fa0d66de3e7b7';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingToday() {\n  const response = await axios('/trending/all/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n}\n\nexport async function fetchMovieDetailsById(id) {\n  const response = await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMovieName(moviname) {\n  const response = await axios(`/search/movie`, {\n    params: {\n      api_key: KEY,\n      page: 1,\n      query: moviname,\n    },\n  });\n\n  return response.data.results;\n}\n\nexport async function fetchMovieCredits(id) {\n  const response = await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n}\n"],"names":["CastStyleds","styled","CastDiv","useState","creditsId","setCreditsId","moviesId","useParams","useEffect","fetchMovieCredits","then","length","map","id","original_name","profile_path","character","src","photo","alt","KEY","fetchTrendingToday","axios","params","api_key","response","data","results","fetchMovieDetailsById","fetchMovieName","moviname","page","query","cast","fetchMovieReviews"],"sourceRoot":""}